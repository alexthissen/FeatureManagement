# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  imageTag: '$(Build.BuildId)'

stages:
- stage: build
  displayName: 'Build assemblies'
  jobs:
  - job: ContinuousIntegrationBuild
    displayName: 'Build on merge'
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Microsoft Azure Sponsorship(ad184f13-1651-4b33-98bc-35ee7e41deec)'
        azureContainerRegistry: '{"loginServer":"featuremanagement.azurecr.io", "id" : "/subscriptions/ad184f13-1651-4b33-98bc-35ee7e41deec/resourceGroups/FeatureManagementShowcase/providers/Microsoft.ContainerRegistry/registries/featuremanagement"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
        additionalImageTags: $(imageTag)
        buildImages: true
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Microsoft Azure Sponsorship(ad184f13-1651-4b33-98bc-35ee7e41deec)'
        azureContainerRegistry: '{"loginServer":"featuremanagement.azurecr.io", "id" : "/subscriptions/ad184f13-1651-4b33-98bc-35ee7e41deec/resourceGroups/FeatureManagementShowcase/providers/Microsoft.ContainerRegistry/registries/featuremanagement"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: '$(imageTag)'
        includeLatestTag: true
- stage: deploy
  displayName: 'Deploy to EarlyAdopters'
  jobs:
  - job: DeployImages
    displayName: 'Deploy container images to EarlyAdopters cluster'
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'EarlyAdopters-RetroGamingCluster-earlyadopters-1652807854252'
        namespace: 'earlyadopters'
        manifests: '**/gamingwebapp.k8s-dep.yaml'
        containers: |
          featuremanagement.azurecr.io/leaderboardwebapi:$(imageTag)
          featuremanagement.azurecr.io/retrogamingwebapp:$(imageTag)